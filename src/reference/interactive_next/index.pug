extends ./page.pug

block reference
    p Custom controls allow you to use custom HTML, CSS, and JavaScript to create Interactive experiences for your viewers. This allows you to create rich, engaging experiences in seconds with effectively limitless customizability!

    p We provide a default bundle of controls that contains button and joystick controls, along with some other utilities. The base bundle is built upon #[a(href='https://preactjs.com/') Preact], but if you are already familiar with other web frameworks you are free to swap it out.

    h2#bundles Bundles

    p In Mixer, Interactive creations are organized into Projects, which include a name, description, and authorship information. Each Project has multiple Versions, which contain specific information about the layout of controls, groups, and scenes. For more information about Interactive in general, check out our #[a(href='/reference/interactive/index.html') Interactive Reference].

    p Your collection of HTML, CSS, and JavaScript is called an Interactive #[strong Bundle], and project versions can be assigned to load a specific Bundle.

    figure
        img(src='/img/reference/interactive/controls/project-heirarchy.svg' alt='studio share button')
        figcaption The project "My Awesome Project" has three versions. Two we've assigned to the default bundle (called the #[code interactive-launchpad]) and for version 2.0 we've created a custom bundles.

    p Bundles themselves can have multiple bundle versions. Bundles are initially created privately, accessible only to you. Once you decide to "publish" a bundle version to make it public, you won't be able to modify it.

    h2#quickstart Quickstart

    h3#prerequisites #0 Prerequisites

    p You first need to #[a(href='https://nodejs.org/en/download/, target=_blank') install Node.js] on your computer. This lets you run build scripts and tools. You'll also need a decent code editor. We recommend #[a(href='https://code.visualstudio.com/' target='_blank') Visual Studio Code] as a powerful editor with great JavaScript support out-of-the-box.

    p After Node.js is installed, run the following command to install the miix command line tool:

    pre: code npm install -g miix-cli

    p miix is the tool you'll use for creating, building, and uploading bundles to Mixer.

    h3#create-a-project #1 Create a Project

    p Open your command line in the folder you'd like to work in, then run the quickstart command:

    pre: code miix quickstart my-first-project

    p This will automatically download the contents of the default bundle from its #[a(href='https://github.com/mixer/interactive-launchpad' target='_blank') Github repo] and install its local dependencies.

    p It'll create a subdirectory with your project name, let's jump in there!

    pre: code cd my-first-project

    h3#customize #2 Customize

    p Run the following command to boot up the local development server:

    pre: code npm start

    p This will automatically start a local web server and open your browser, where you can now see the built-in controls are laid out. Feel free to open the directory in your favorite editor and start poking around! The controls will automatically update and reload whenever you edit a file. For a deeper dive into the mechanics of controls, take a look at the #[a(href='/reference/interactive_next/controls.html') Controls] section of these docs.

    h3#publish #3 Publish

    p You've played around in the editor and are ready to see how the controls work live? Awesome! Run #[code miix upload] to bundle and upload your controls to Mixer. They'll be private by default. You'll be prompted to log in when you run this command, if you've not already done so.

    pre: code miix upload

    p Now, open up the #[a(href='https://mixer.com/i/studio' target='_blank') Interactive Studio]. Create a project if you've not already done, and TODO TO ASSOCIATE.

    h2#next-steps Next Steps

    ul
        li Learn how to create and modify custom controls #[a(href='/reference/interactive_next/controls.html') here]
        li Get the most out of the miix editor with #[a(href='/reference/interactive_next/controls.html') this guide]
        li Read more about writing Interactive game clients #[a(href='/tutorials/interactive.html') here]
        li Ask questions and get help #[a(href='https://gitter.im/Mixer/developers') on Gitter]
