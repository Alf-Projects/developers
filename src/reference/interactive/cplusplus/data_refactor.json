{
    "beam_participant":   
    {
      "name": "beam_participant",
      "index":"0",
      "description": "This class represents a user who is currently viewing a Beam Interactive stream. This user (also known as a beam_participant) can have both a Beam account and a Microsoft Security Account (MSA).",
      "type": "Class",
      "syntax": {
        "code": "public class beam_participant"
      },
      "methods": [
        {
          "code": "const uint32_t& beam_id() const",
          "description": "Returns the Beam ID of the user.",
          "name": "beam_id()",
          "return_type": "uint32_t&",
          "return_description": "The Beam ID of the user."
        },
        {
          "code": "const string_t& beam_username() const",
          "description": "Returns the Beam username of the user.",
          "name": "beam_username()",
          "return_type": "string_t&",
          "return_description": "The Beam username of the user."
        },
        {
          "code": "const uint32_t& beam_level() const",
          "description": "Returns the Beam level of the user.",
          "name": "beam_level()",
          "return_type": "uint32_t&",
          "return_description": "The Beam level of the user."
        },
        {
          "code": "const beam_participant_state& state() const",
          "description": "Returns the participant's current state.",
          "name": "state()",
          "return_type": "beam_participant_state&",
          "return_description": "The participant's current state."
        },
        {
          "code": "const std::chrono::milliseconds& lastInputAt() const",
          "description": "Returns the time (in UTC) at which this participant last had interactive control input.",
          "name": "lastInputAt()",
          "return_type": "std::chrono::milliseconds&",
          "return_description": "The time (in UTC) at which this participant last had interactive control input."
        },
        {
          "code": "const std::chrono::milliseconds& connectedAt() const",
          "description": "Returns the time (in UTC) at which this participant connected to this Beam Interactive stream.",
          "name": "connectedAt()",
          "return_type": "std::chrono::milliseconds&",
          "return_description": "The time (in UTC) at which this participant connected to this Beam Interactive stream."
        },
        {
          "code": "const bool& input_disabled() const",
          "description": "Returns a Boolean value that indicates whether or not the user input is disabled. If TRUE, user input has been disabled.",
          "name": "input_disabled()",
          "return_type": "bool&",
          "return_description": "The time (in UTC) at which this participant connected to this Beam Interactive stream."
        },
        {
          "code": "std::vector<std::shared_ptr<beam_control>> controls()",
          "description": "Returns an array of controls this participant has interacted with.",
          "name": "controls()",
          "return_type": "std::vector<std::shared_ptr<beam_control>>",
          "return_description": "An array of controls this participant has interacted with."
        },
        {
          "code": "std::vector<std::shared_ptr<beam_button_control>> buttons()",
          "description": "Returns an array of buttons this participant has interacted with.",
          "name": "buttons()",
          "return_type": "std::vector<std::shared_ptr<beam_button_control>>",
          "return_description": "An array of buttons this participant has interacted with."
        },
        {
          "code": "std::vector<std::shared_ptr<beam_joystick_control>> joysticks()",
          "description": "Returns an array of joystick this participant has interacted with.",
          "name": "joysticks()",
          "return_type": "std::vector<std::shared_ptr<beam_joystick_control>>",
          "return_description": "An array of joysticks this participant has interacted with."
        }
      ]
  }

}
